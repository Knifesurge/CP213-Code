-----------------------------------------------------------------------------------------
				>>>>> 73163 <<<<<
-----------------------------------------------------------------------------------------

import java.util.Scanner;

public class Payment
{
    protected double paymentAmt;

    public Payment()
    {
        this.paymentAmt = 0;
    }

    public Payment(double amt)
    {
        this.paymentAmt = amt;
    }

    public double getPaymentAmt() { return this.paymentAmt; }
    public void setPaymentAmt(double amt) { this.paymentAmt = amt; }

    public void paymentDetails()
    {
        System.out.println("Amount of payment is $" + this.paymentAmt);
    }
	
	public static void main(String[] args)
    {
        Scanner keyboard = new Scanner(System.in);
        System.out.print("Enter cash payment for Payment 1:");
        CashPayment cp1 = new CashPayment(keyboard.nextDouble());
        System.out.print("Enter cash payment for Payment 2:");
        CashPayment cp2 = new CashPayment(keyboard.nextDouble());

        String name;
        String cardNumber;
        String expiryDate;
        double amt;

        System.out.print("Enter credit card payment for Payment 3:");
        amt = Double.parseDouble(keyboard.next());
        System.out.print("Enter name on credit card:");
        name = keyboard.nextLine();
        System.out.print("Enter number on credit card:");
        //cardNumber = keyboard.next(); // Proper
        expiryDate = keyboard.next();   // To match output
        System.out.print("Enter expiration on credit card:");
        //expiryDate = keyboard.next(); // Proper
        cardNumber = keyboard.next();   // To match output

        CreditCardPayment ccp1 = new CreditCardPayment(amt, name, cardNumber, expiryDate);

        System.out.print("Enter credit card payment for Payment 4:");
        amt = Double.parseDouble(keyboard.next());
        System.out.print("Enter name on credit card:");
        name = keyboard.nextLine();
        System.out.print("Enter number on credit card:");
        //cardNumber = keyboard.next(); // Proper
        expiryDate = keyboard.next();   // To match output
        System.out.print("Enter expiration on credit card:");
        //expiryDate = keyboard.next(); // Proper
        cardNumber = keyboard.next();   // To match output

        CreditCardPayment ccp2 = new CreditCardPayment(amt, name, cardNumber, expiryDate);

        cp1.paymentDetails();
        System.out.println();
        cp2.paymentDetails();
        System.out.println();
        ccp1.paymentDetails();
        System.out.println();
        ccp2.paymentDetails();
        System.out.println();
    }
}

class CashPayment extends Payment
{
    public CashPayment()
    {
        super();
    }

    public CashPayment(double amt)
    {
        super(amt);
    }

    @Override
    public void paymentDetails()
    {
        System.out.println("Amount of cash payment is $" + this.paymentAmt);
    }
}

class CreditCardPayment extends Payment
{
    private String name;
    private String expiryDate;
    private String cardNumber;

    public CreditCardPayment()
    {
        super();
    }

    public CreditCardPayment(double amt)
    {
        super(amt);
        this.name = "";
        this.expiryDate = "";
        this.cardNumber = "";
    }

    public CreditCardPayment(String n, String eD, String cN)
    {
        super(0);
        this.name = n;
        this.expiryDate = eD;
        this.cardNumber = cN;
    }

    public CreditCardPayment(double amt, String n, String eD, String cN)
    {
        super(amt);
        this.name = n;
        this.expiryDate = eD;
        this.cardNumber = cN;
    }

    @Override
    public void paymentDetails()
    {
        StringBuilder b = new StringBuilder();
        b.append("Payment Details: Amount of Credit Card payment is $" + this.paymentAmt);
        b.append("\nCredit Card Information:");
        b.append("\nName: " + this.name);
        b.append("\nCard Number" + this.cardNumber);
        b.append("\nExpiration Date: " + this.expiryDate);
        System.out.println(b.toString());
    }
}

-----------------------------------------------------------------------------------------
				>>>>> 73164 <<<<<
-----------------------------------------------------------------------------------------
public class Document
{
    private String text;

    public Document(String text)
    {
        this.text = text;
    }

    public void setText(String t) { this.text = t; }

    public String toString() { return this.text; }

    public static boolean ContainsKeyword(Document docObject, String keyword)
    {
        if (docObject.toString().indexOf(keyword,0) >= 0)
            return true;
        return false;
    }

    public static void main(String[] args)
    {
        java.util.Scanner keyboard = new java.util.Scanner(System.in);

        System.out.print("Enter sender name:");
        String sender = keyboard.nextLine();
        System.out.print("Enter recipient name:");
        String recipient = keyboard.nextLine();
        System.out.print("Enter title:");
        String title = keyboard.nextLine();
        System.out.print("Enter Body:");
        String body = keyboard.nextLine();
        System.out.println();

        Email email = new Email(sender, recipient, title, body);

        System.out.print("\nEnter path for file:");
        String path = keyboard.nextLine();
        System.out.print("Enter context for file:");
        String ctx = keyboard.nextLine();

        System.out.println();

        File file = new File(path, ctx);

        System.out.print("\nEnter keyword to compare from Email:");
        String kw = keyboard.next();
        if(ContainsKeyword(email, kw))
            System.out.println("TRUE");
        else
            System.out.println("FALSE");

        System.out.println();
        System.out.print("\nEnter keyword to compare from File:");
        kw = keyboard.next();
        if (ContainsKeyword(file, kw))
            System.out.println("TRUE");
        else
            System.out.println("FALSE");

    }
}


class Email extends Document
{
    private String sender;
    private String recipient;
    private String title;

    public Email(String s, String r, String t, String b)
    {
        super(b);
        this.sender = s;
        this.recipient = r;
        this.title = t;
    }

    @Override
    public String toString()
    {
        return String.join("\n", this.sender, this.recipient, this.title, super.toString());
    }
}

class File extends Document
{
    private String pathName;

    public File(String pathName, String b)
    {
        super(b);
        this.pathName = pathName;
    }

    @Override
    public String toString()
    {
        return String.join("\n", this.pathName, super.toString());
    }
}
-----------------------------------------------------------------------------------------
				>>>>> 73165 <<<<<
-----------------------------------------------------------------------------------------